#-*- encoding:utf-8 -*-

'''
그럼 추억의 신뢰할 만한 Todo list인, 전체 프로그램의 "Hello World" 부분 부터
시작해보자. 다음의 조건을 만족하는 명령줄 todo list 프로그램을 작성하라.

* 할 일을 입력 받은 다음 이 내용을 삭제되지 않는 공간에 저장하여 프로그램이
  다시 시작해도 계속 존재하도록 해야 한다.
* 아무 것도 입력하지 않을 때까지 계속해서 작업을 추가할 수 있도록 해야한다.
  이때 아무 것도 입력하지 않았을 때의 비어 있는 입력 값은 저장하지 않는다.
* 모든 작업을 출력해야 한다.
* 완료된 작업을 나타내기 위해 사용자로 하여금 작업을 지울 수 있도록 한다.

제약 조건
* 데이터를 외부 데이터 소스에 저장할 것
* 서버쪽 언어를 사용하는 경우, 가급적 Redis를 사용할 것
* 지속적인 데이터베이스를 사용하기 위해 Parse나 Firebase 같은 써드파티 서비스를
  사용하는 것을 고려할 것

도전 과제
* 이 프로그램을 오직 프론트-엔드(Front-end) 기술만을 사용하여 웹 브라우저에서
  구현해보자. 이를 위해서는 IndexedDB를 조사하여 데이터를 저장하는 방법을 익혀
  야 할 것이다.
* 프론트-엔드 쪽을 안드로이드나 아이폰 앱으로 구현해보자. 이때 프론트-엔드는
  여러분이 서버쪽 언어로 직접 작성한 백-엔드(Backend)와 연결되어야 한다. 이를
  위해 여러분만의 API를 제작하여 리스트를 조회하고, 새로운 아이템을 생성하고,
  아이템에 완료 처리를 할 수 있도록 구현해보자.
'''


if __name__ == "__main__":
    pass
